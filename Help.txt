install kali&tools from install.txt &login as root
clone kernel into /root/build/kernel_src/
setup latest toolchains in /root/build/tools/  
edit this file in kernel-src (bash.sh  kali_defconfig  ) 
apply wifi patches
build
####################################################################################

Makefile;
obj-y += rtl8188eus/

Kconfig :
source "drivers/rtl8188eus/Kconfig"

And copy driver(rtl) in drivers/

####For Using Aosp Clang#############################################################

PATH="/root/build/tools/gcc/aarch64/aarch64-linux-android-4.9/bin:$PATH"

PATH="/root/build/tools/gcc/arm/arm-linux-androideabi-4.9/bin:$PATH"

PATH="/root/build/tools/clang/bin:$PATH"

export LD_LIBRARY_PATH="/root/build/tools/clang/lib64:$LD_LIBRARY_PATH"

make clean && make mrproper && rm -rf out
mkdir -p out
export ARCH=arm64
export SUBARCH=ARM64
export DTC_EXT=dtc
export CLANG_TRIPLE=aarch64-linux-gnu-
export CROSS_COMPILE=aarch64-linux-android-
export CROSS_COMPILE_ARM32=arm-linux-androideabi-

make O=out clean mrproper CC=clang AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump READELF=llvm-readelf OBJSIZE=llvm-size STRIP=llvm-strip HOSTCC=clang HOSTCXX=clang++ vendor/alioth_defconfig


make CC=clang O=out menuconfig
cd out/ && cp .config /root/build/kernel-src/arch/arm64/configs/vendor/alioth_defconfig
cd ..

make vendor/alioth_defconfig
make clean && make mrproper
	
	make \
	O=out \
	CC=clang \
	AR=llvm-ar \
	NM=llvm-nm \
	OBJCOPY=llvm-objcopy \
	OBJDUMP=llvm-objdump \
	READELF=llvm-readelf \
	OBJSIZE=llvm-size \
	STRIP=llvm-strip \
	HOSTCC=clang \
	HOSTCXX=clang++ \
	-j$(nproc --all)


###############################################################################
#For using Snapdragon clang

PATH="$TOP/root/build/tools/sdclang/linux-x86_64/bin:$PATH"
export ARCH=arm64
export SUBARCH=ARM64
export DTC_EXT=dtc
export CROSS_COMPILE=aarch64-linux-gnu-
export CROSS_COMPILE_ARM32=arm-linux-gnueabi-

make O=out clean mrproper CC=clang kali_defconfig

        make CC=clang O=out menuconfig
	cp .config arch/arm64/configs/kali_defconfig
	make clean
        make kali_defconfig
	
make O=out CC=clang -j$(nproc --all) Image.gz-dtb 2>&1 | tee kernel.log

############################################################################
#for help

install tools from all page you have
setup tools and path
edit bash build.sh
edit defconfig
apply patch from nethunter build tool 2-3-1
now goto  /kernel-src/drivers/staging/qcacld-3.0/configs/default_defconfig   (monitor mode =y)
build now
final make anykernel.zip with modules




edit kconfig & overly set yes in kali-defconfig CONFIG_BUILD_ARM64_DT_OVERLAY=y
CONFIG_MODULE_FORCE_LOAD=y

apply patch from nethunter build tool 2-3-1

make internal wlan support (monitor mode) injection too by goto /drivers/staging/qcacld-3.0/configs/default_config   and set y

test aosp without Image.gz-dtb in the end & CC=clang before menuconfig
test export arch ..blablabla in final build
move kernel image in anykernel.zip
move tplink drivers to any kernel.zip 
download wirless frimeware for nethunter 
watch tutorials from phone (video 39min)

for test make clone after export commands
wget http://patches.aircrack-ng.org/mac80211.compat08082009.wl_frag+ack_v1.patch
patch -p1 < mac80211.compat08082009.wl_frag+ack_v1.patch



make O=out ARCH=arm64 kali_defconfig  
make O=out menuconfig
make
cp .config arch/arm64/configs/kali_defconfig
make clean
make kali_defconfig
make -j$(nproc --all) O=out




#new kernel in 
arch/arm/boot/zImage or
arch/arm/boot/zImage-dtb or
/out/arch/arm64/boot 
and find the Image-dtb file
We prefer to use the -dtb extension if given the choice.


make O=out REAL_CC=/root/build/z-all/sdclang/toolchains/llvm-Snapdragon_LLVM_for_Android_6.0/prebuilt/linux-x86_64/bin/clang CLANG_TRIPLE=aarch64-linux-gnu- alioth_defconfig

make -j$(nproc) O=out REAL_CC=/root/build/z-all/sdclang/toolchains/llvm-Snapdragon_LLVM_for_Android_6.0/prebuilt/linux-x86_64/bin/clang CLANG_TRIPLE=aarch64-linux-gnu- 2>&1 | tee kernel.log


export CROSS_COMPILE=/root/build/alioth/gcc/aarch64-linux-android-4.9/bin/aarch64-linux-android-

make O=out REAL_CC=/root/build/alioth/clang14/bin/clang CLANG_TRIPLE=aarch64-linux-gnu- alioth_defconfig
make -j$(nproc) O=out REAL_CC=/root/build/alioth/clang14/bin/clang CLANG_TRIPLE=aarch64-linux-gnu- 








git reset 
git remote -v
git pull --rebase
git init
git add -A
git commit -m "Add your commit"
git branch -M main
git push origin main --force


333333333333333333333333333333333333333333333333333333333333333333333

export ARCH=arm64
export SUBARCH=ARM64
make clean && make mrproper && rm -rf out
mkdir -p out

make O=out clean mrproper CC=clang vendor/alioth_defconfig

make CC=clang O=out menuconfig

cd out/ && cp .config /root/build/kernel-src/arch/arm64/configs/vendor/alioth_defconfig
cd ..

make vendor/alioth_defconfig
make clean && make mrproper
#move touch folder
./build_proton.sh


